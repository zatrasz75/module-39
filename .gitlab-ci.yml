stages:
  - build
  - test
  - image

variables:
  PUBLIC_REGISTRY_HOST: docker.io
  PUBLIC_REGISTRY_OWNER: zatrasz
  PUBLIC_REGISTRY_APP_NAME: module-39
  CI_COMMIT_REF_NAME: latest
  DOCKER_HOST: tcp://docker:2375/


build_app:
  stage: build
  image: golang:1.15
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./${PUBLIC_REGISTRY_APP_NAME} ./

test:
  stage: test
  image: golang:1.15
  script:
    - echo "Run tests!"
    - go test ./...

lint:
  stage: test
  image: golang:1.15
  script:
    - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
    - golangci-lint --version
    - golangci-lint run
  allow_failure: true

build_image:stable:
  stage: image
  image: docker:latest
  variables:
    DOCKER_HOST: tcp://10.0.2.15:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

  services:
    - name: docker:20-dind
      alias: docker
      command: ["--tls=false"]

  script:
    - docker -v
    - docker build -t ${PUBLIC_REGISTRY_HOST}/${PUBLIC_REGISTRY_OWNER}/${PUBLIC_REGISTRY_APP_NAME}:${CI_COMMIT_REF_NAME} ./
    - docker login -u ${PUBLIC_REGISTRY_OWNER} -p ${PUBLIC_REGISTRY_PASSWORD} ${PUBLIC_REGISTRY_HOST}
    - echo "docker push docker.io/forwork0529/module-39:latest"
    - docker images
    - docker push ${PUBLIC_REGISTRY_HOST}/${PUBLIC_REGISTRY_OWNER}/${PUBLIC_REGISTRY_APP_NAME}:${CI_COMMIT_REF_NAME}
  only:
    - main

build_image:latest:
  stage: image
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "No build image commands!!!"
  when: manual
